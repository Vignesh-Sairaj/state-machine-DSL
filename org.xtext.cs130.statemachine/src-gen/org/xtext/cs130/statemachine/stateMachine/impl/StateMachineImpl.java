/**
 * generated by Xtext 2.20.0
 */
package org.xtext.cs130.statemachine.stateMachine.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.cs130.statemachine.stateMachine.Events;
import org.xtext.cs130.statemachine.stateMachine.StateMachine;
import org.xtext.cs130.statemachine.stateMachine.StateMachinePackage;
import org.xtext.cs130.statemachine.stateMachine.States;
import org.xtext.cs130.statemachine.stateMachine.Variables;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>State Machine</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.cs130.statemachine.stateMachine.impl.StateMachineImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.cs130.statemachine.stateMachine.impl.StateMachineImpl#getVardefs <em>Vardefs</em>}</li>
 *   <li>{@link org.xtext.cs130.statemachine.stateMachine.impl.StateMachineImpl#getEventdefs <em>Eventdefs</em>}</li>
 *   <li>{@link org.xtext.cs130.statemachine.stateMachine.impl.StateMachineImpl#getStatedefs <em>Statedefs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StateMachineImpl extends MinimalEObjectImpl.Container implements StateMachine
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getVardefs() <em>Vardefs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVardefs()
   * @generated
   * @ordered
   */
  protected Variables vardefs;

  /**
   * The cached value of the '{@link #getEventdefs() <em>Eventdefs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEventdefs()
   * @generated
   * @ordered
   */
  protected Events eventdefs;

  /**
   * The cached value of the '{@link #getStatedefs() <em>Statedefs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatedefs()
   * @generated
   * @ordered
   */
  protected States statedefs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StateMachineImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StateMachinePackage.Literals.STATE_MACHINE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateMachinePackage.STATE_MACHINE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variables getVardefs()
  {
    return vardefs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVardefs(Variables newVardefs, NotificationChain msgs)
  {
    Variables oldVardefs = vardefs;
    vardefs = newVardefs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StateMachinePackage.STATE_MACHINE__VARDEFS, oldVardefs, newVardefs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVardefs(Variables newVardefs)
  {
    if (newVardefs != vardefs)
    {
      NotificationChain msgs = null;
      if (vardefs != null)
        msgs = ((InternalEObject)vardefs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StateMachinePackage.STATE_MACHINE__VARDEFS, null, msgs);
      if (newVardefs != null)
        msgs = ((InternalEObject)newVardefs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StateMachinePackage.STATE_MACHINE__VARDEFS, null, msgs);
      msgs = basicSetVardefs(newVardefs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateMachinePackage.STATE_MACHINE__VARDEFS, newVardefs, newVardefs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Events getEventdefs()
  {
    return eventdefs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEventdefs(Events newEventdefs, NotificationChain msgs)
  {
    Events oldEventdefs = eventdefs;
    eventdefs = newEventdefs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StateMachinePackage.STATE_MACHINE__EVENTDEFS, oldEventdefs, newEventdefs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEventdefs(Events newEventdefs)
  {
    if (newEventdefs != eventdefs)
    {
      NotificationChain msgs = null;
      if (eventdefs != null)
        msgs = ((InternalEObject)eventdefs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StateMachinePackage.STATE_MACHINE__EVENTDEFS, null, msgs);
      if (newEventdefs != null)
        msgs = ((InternalEObject)newEventdefs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StateMachinePackage.STATE_MACHINE__EVENTDEFS, null, msgs);
      msgs = basicSetEventdefs(newEventdefs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateMachinePackage.STATE_MACHINE__EVENTDEFS, newEventdefs, newEventdefs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public States getStatedefs()
  {
    return statedefs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStatedefs(States newStatedefs, NotificationChain msgs)
  {
    States oldStatedefs = statedefs;
    statedefs = newStatedefs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StateMachinePackage.STATE_MACHINE__STATEDEFS, oldStatedefs, newStatedefs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatedefs(States newStatedefs)
  {
    if (newStatedefs != statedefs)
    {
      NotificationChain msgs = null;
      if (statedefs != null)
        msgs = ((InternalEObject)statedefs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StateMachinePackage.STATE_MACHINE__STATEDEFS, null, msgs);
      if (newStatedefs != null)
        msgs = ((InternalEObject)newStatedefs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StateMachinePackage.STATE_MACHINE__STATEDEFS, null, msgs);
      msgs = basicSetStatedefs(newStatedefs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateMachinePackage.STATE_MACHINE__STATEDEFS, newStatedefs, newStatedefs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StateMachinePackage.STATE_MACHINE__VARDEFS:
        return basicSetVardefs(null, msgs);
      case StateMachinePackage.STATE_MACHINE__EVENTDEFS:
        return basicSetEventdefs(null, msgs);
      case StateMachinePackage.STATE_MACHINE__STATEDEFS:
        return basicSetStatedefs(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StateMachinePackage.STATE_MACHINE__NAME:
        return getName();
      case StateMachinePackage.STATE_MACHINE__VARDEFS:
        return getVardefs();
      case StateMachinePackage.STATE_MACHINE__EVENTDEFS:
        return getEventdefs();
      case StateMachinePackage.STATE_MACHINE__STATEDEFS:
        return getStatedefs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StateMachinePackage.STATE_MACHINE__NAME:
        setName((String)newValue);
        return;
      case StateMachinePackage.STATE_MACHINE__VARDEFS:
        setVardefs((Variables)newValue);
        return;
      case StateMachinePackage.STATE_MACHINE__EVENTDEFS:
        setEventdefs((Events)newValue);
        return;
      case StateMachinePackage.STATE_MACHINE__STATEDEFS:
        setStatedefs((States)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StateMachinePackage.STATE_MACHINE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case StateMachinePackage.STATE_MACHINE__VARDEFS:
        setVardefs((Variables)null);
        return;
      case StateMachinePackage.STATE_MACHINE__EVENTDEFS:
        setEventdefs((Events)null);
        return;
      case StateMachinePackage.STATE_MACHINE__STATEDEFS:
        setStatedefs((States)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StateMachinePackage.STATE_MACHINE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case StateMachinePackage.STATE_MACHINE__VARDEFS:
        return vardefs != null;
      case StateMachinePackage.STATE_MACHINE__EVENTDEFS:
        return eventdefs != null;
      case StateMachinePackage.STATE_MACHINE__STATEDEFS:
        return statedefs != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //StateMachineImpl
