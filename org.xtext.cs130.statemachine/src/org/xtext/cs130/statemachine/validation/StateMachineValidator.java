/*
 * generated by Xtext 2.20.0
 */
package org.xtext.cs130.statemachine.validation;

import org.eclipse.xtext.validation.Check;
//import org.xtext.cs130.statemachine.stateMachine.State; // Don't ask me why
import org.xtext.cs130.statemachine.stateMachine.Transition;
import org.xtext.cs130.statemachine.stateMachine.StateMachinePackage;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class StateMachineValidator extends AbstractStateMachineValidator {
	
	public static final String REPEAT_EVENT = "RepeatedEvent";

	@Check
	public void checkRepeatedEvent(Transition transition) {
		org.xtext.cs130.statemachine.stateMachine.State state = 
				(org.xtext.cs130.statemachine.stateMachine.State) transition.eContainer();
		
		for(Transition other_transition : state.getTransitions()) {
			if(! transition.equals(other_transition)) {
				if(transition.getEvent().equals(other_transition.getEvent()))
					error("Transitions cannot have same event",
							StateMachinePackage.Literals.TRANSITION__EVENT,
							REPEAT_EVENT);
			}
		}
	}	
}
